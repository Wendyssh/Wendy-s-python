2019110112051340
字符串+变量
一、字符串
---转义字符
---格式化
---内置函数

1、转义字符
---用一个特殊的方法表示出一系列不方便写出来的内容，比如回车键、换行键、退格键
---借助反斜杠字符。出现反斜杠表示后面字符不同于原来的字符，而是进行了转义
---特别注意反斜杠，可能是由转义字符造成
---不同系统对换行操作有不同的表示
   --win:\n
   --Linux:\r\n
---案例ex_25_var转义.py
#b表示 let's go
#可以使用索引号，及外部使用双引号
#2、转义字符
s = "Let's go"
print(s)

#\'和没有反斜杠的意思一样
ss ="let\'s go"
print(ss)

#双斜杠等同于单斜杠，就能打印出原文中本来有的斜杠
sss = "C:\\user"
print(sss)

#回车换行,用 \r\n 表示
s1="this is a \r\n beatiful day, do \r\n you love it"
print(s1)


2、字符串的格式化
---把字符串按照一定格式打印或填充

---格式化的两种方法
   ---利用百分号 (%)其实它就是一个占位符，而不是转义字符
      --%d:此处应放入一个整数
      --%s:此处应放入一个字符串
   ---利用 format 函数
      --现在用format 函数更多见，推荐使用
      --在使用上，以大括号{}和冒号:代替百分号%，后面用 format 参数完成
      --案例 ex_25_var格式化format.py
#format()格式化 .format()
s="i love {}".format("red")
print(s)
#可以进行标号，按照0和1的自然顺序写被替换内容
L="Yes, I am {1} years old, I love {0} and I am {1} years old".format("blue",18)
print (L)


3、None
---表示什么都没有
---如果函数没有返回值，可以返回 None
---用来占位置
---用来接触变量的绑定（了解即可）


二、表达式
--由一个或几个数字或者变量和运算符组成的一行代码（相当于数学中的式子）
--通常会返回一个结果

三、运算符
--分类
--没有自增运算符（和其它语言的区别）
  ---算数运算符
     ---加减乘除(+ - * /)
        ---% 取余运算，只会得到余数
        ---// 取整运算（也叫地板除）
     ---** 幂运算
  ---比较大小或关系运算符
     ---等于号 == 
        结果是 false/true
     ---不等于 !=

  ---赋值运算符(=, a+=7 相当于a = a+7)
     ----=,//==,**=等
  ---逻辑运算符
     -- and,or,not（逻辑非）
     -- python 里面没有异或运算
     -- and 看做乘法，or看做加法，True 看做1，flase 看做0。如果结果是0则为flase，否则为true>
     --逻辑运算的短路问题（一旦确定整个式子的值则不再进行计算，直接返回）
        ---如果逻辑表达式中包含赋值表达式则结果很难预测
  ---位运算
  ---成员运算 (in 和 not in)
     	
  ---身份运算符
     ----is:用来检测两个变量是否是同一个变量
         ---语法就是var1 is var2
     ---is not：两个变量不是同一个变量
     (涉及到内存的问题，但运行结果和老师视频不一样，不理解)
     案例 ex_25_var运算符.py
c = "i love wangxiaojing"
d = "i love wangxiaojing"
print (c is d)

返回结果是 true。但老师解释称是内存不同。sublime 运行结果是 true。

