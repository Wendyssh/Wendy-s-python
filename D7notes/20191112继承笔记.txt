201911121416
L34 OOP
5、关于 self ex_34_OOP.py
---self在对象的方法中表示当前对象本身，如果通过对象调用一个方法，那么该对象会自动传入到当前方法的第一个参数中。

---self并不是关键字，只是一个用于接受对象的普通参数，理论上可以用任何一个普通变量名代替

---方法中有self形参的方法称为非绑定类的方法，可以通过对象访问；没有self的是绑定类的方法，只有通过类访问

----使用类访问绑定类的方法时，如果类方法中需要访问当前类的成员，可以通过 __class__成员名来访问。

6、面向对象的三大特性
--封装
--继承
--多态

#6.1 封装
可参考文章http://blog.csdn.net/handsomekang/article/details/40303207
--封装是指对对象的成员进行访问限制
--封装的三个级别：
  ---公开,public
  ---受保护的,protected
  ---私有的,private
  ---public,private,protected 不是关键字
--判别对象的位置
  ---对象内部
  ---对象外部
  ---子类中
--Python的下划线使用
-私有
    --私有成员是最高级别的封装，智能在当前类或对象中访问
    --在成员前面添加两个下划线即可
      ---案例
        #封装
class person():
#name 是公有的成员
    name = "liuying"
    #__age就是私有成员
    __age = 18

p = person()
print(p.name)
#__age 是私有，会出错，提示没有属性‘age"
#print(p.age)

    --Python的私有不是真私有，是一种称为name mangling的改名策略
      ---可以使用对象.__classname__attributename 访问
--受保护的封装 protected
   ----将对象成员进行一定级别的封装，然而，在类中或子类中都可以进行访问，但是在外都不可以（比如小名等）
   ----封装方法：在成员名称前添加一个下划线即可

--公共的，公开的 public
    ----对成员没有任何操作

##3.2 继承
--继承就是一个类可以获得另外一个类中的成员属性和成员方法
--作用：减少代码，增加代码的复用功能，同时可以设置类与类直接的关系
--继承与被继承的概念：
    ---被继承的类叫父类，也叫基类，也叫超类
    ---用于继承的类，叫子类，也叫派生类
    ---继承与被继承一定存在 is-a 关系